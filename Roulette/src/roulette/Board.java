package roulette;
import java.awt.Color;
import java.awt.Font;
import javax.swing.UIManager;
import java.util.ArrayList;
import javax.swing.plaf.ColorUIResource;  // Imports libraries
import javax.swing.JOptionPane;

public class Board {
	int payout;
	ArrayList<Bin> bins = new ArrayList<Bin>(); // Creates bins and bets array.
	ArrayList<Bet> bets = new ArrayList<Bet>();
        ArrayList<Player> players = new ArrayList<Player>();
    int rouletteNumber;
    Wheel wheel = new Wheel();
    public Board()
    {
        
        Font sans = new Font(Font.MONOSPACED,Font.PLAIN,25);
        UIManager.put("OptionPane.messageFont", sans);
        UIManager.put("OptionPane.buttonFont", sans);                  // Sets up ui stuff
        UIManager UI = new UIManager();
        UI.put("OptionPane.background",new ColorUIResource(100,100,100));
         UI.put("Panel.background", new ColorUIResource(253,43,54));
    	  rouletteNumber = wheel.GenerateRandomNumber();
          System.out.println("Random Number = " +  rouletteNumber); 
         
          
        
    	
    	
    }
      
    void GetArrayListBets(ArrayList<Bet> betTemp)
    {
    	bets = betTemp;  //  function that returns a bet array 
    }
    
    
    public void CheckForWin()  
    {
    	Bin winningBin = (Bin) bins.get(rouletteNumber); // Gets the bin corressponding to the number generated by the wheel.
    	int winNum = winningBin.GetNumberOfBin();  // Get the number , color , of that bin
    	String winCol = winningBin.GetColor();
        String winEvenOrOdd = "";
        if(winNum % 2 == 0)
        {
            winEvenOrOdd = "EVEN"; // Checks if the numbe is even or odd
        }
        else if(winNum % 2 != 0) 
           {
                winEvenOrOdd= "ODD" ; 
             }
                
        
        
    	
    	System.out.println("Checking for win");
    	for (int temp = 0;temp < bets.size();temp++ )   // Runs for every be in the list
    	{
    		System.out.println("Checking Bets");
    		Bet tempBet = (Bet) bets.get(temp);
                                                            
    		Outcome tempOutcome = tempBet.GetOutcome();  // Gets the out come of the bet.
    		
    		if(tempOutcome.GetOutcomeNumber() == winNum) // Checks if the winning number is equal to the number in your bet
    		{
    			 Player winPlayer = tempBet.GetPlayer();  // Gets the player of the bet and tells them they have won
    			 JOptionPane.showMessageDialog(null, winPlayer.getName() + ", You have won! ");
    			 int betMoney = tempBet.GetBetAmount();
    			 payout =  tempBet.GetOddAmount();
    			 betMoney = betMoney * payout;    // Calculates the amount of money the player should get
    			 winPlayer.SetBalance(winPlayer.getBalance() + betMoney + tempBet.GetBetAmount()); // Adds that number to their balance.
    			 JOptionPane.showMessageDialog(null, winPlayer.getName() + " The number was " + winNum +  " You bet $" + tempBet.GetBetAmount() + " and you have won $" + betMoney + ". You currently have $" + winPlayer.getBalance()  );
    		}
    		else if (tempOutcome.GetOutcomeNumber() == -1)
    		{
    			System.out.println("Didn't bet on  a number"); // If they didn't bet, output to the console
    		}
    		else {
    			
    			 JOptionPane.showMessageDialog(null, tempBet.GetPlayer().getName() + ", You bet on a number and lost " + "You have $" + tempBet.GetPlayer().getBalance() + " left. The correct number was " + rouletteNumber );
    			// If they lose tell them that they lost.
    			
    		}

    		if(tempOutcome.GetOutcomeColor().equals(winCol) == true) // Checks if the winning color is equal to the color in your bet.
    		{
    			 Player winPlayer = tempBet.GetPlayer();// Gets the player of the bet and tells them they have won
    			 JOptionPane.showMessageDialog(null, winPlayer.getName() + ", You have have won! ");
    			 int betMoney = tempBet.GetBetAmount();
    			 payout = tempBet.GetOddAmount();
    			 betMoney = betMoney * payout;
    			 winPlayer.SetBalance(winPlayer.getBalance() + betMoney + tempBet.GetBetAmount());// Adds that number to their balance.
    			 JOptionPane.showMessageDialog(null, winPlayer.getName() + "The color was " + winCol + " You bet $" + tempBet.GetBetAmount() + " and you have won $" + betMoney + ". You currently have $" + winPlayer.getBalance()  );
    		}
    		else if(tempOutcome.GetOutcomeColor().equals("") == true)
    		{
    			System.out.println("Didn't bet on a color");
    		}
    		else {
    			
   			 JOptionPane.showMessageDialog(null, tempBet.GetPlayer().getName() + ", You bet on a color and lost. The color was " + winCol + ". You have $" + tempBet.GetPlayer().getBalance() + " left" );
    	
    			 			
    			
    		
    	}
                
    		if(tempOutcome.GetOutcomeEvenOrOdd().equals(winEvenOrOdd) == true)
    		{
    			 Player winPlayer = tempBet.GetPlayer();
    			 JOptionPane.showMessageDialog(null, winPlayer.getName() + ", You have have won! ");
    			 int betMoney = tempBet.GetBetAmount();
    			 payout = tempBet.GetOddAmount();
    			 betMoney = betMoney * payout;
    			 winPlayer.SetBalance(winPlayer.getBalance() + betMoney + tempBet.GetBetAmount());
    			 JOptionPane.showMessageDialog(null, winPlayer.getName() + "The outcome was " + winEvenOrOdd + " You bet $" + tempBet.GetBetAmount() + " and you have won $" + betMoney + ". You currently have $" + winPlayer.getBalance()  );
    		}
    		else if(tempOutcome.GetOutcomeEvenOrOdd().equals("") == true)
    		{
    			System.out.println("Didn't bet on even or odd");
    		}
    		else {
    			
   			 JOptionPane.showMessageDialog(null, tempBet.GetPlayer().getName() + ", You bet on even or odd. The outome was " + winEvenOrOdd + ". You have $" + tempBet.GetPlayer().getBalance() + " left" );
    	
                    }
    	
    	
        System.out.print(players.size());
    	
    }
 ///Create leaderboard.
       
        for (int p = 0; p < players.size();p++)
        {
           
            Player tempPlayer = (Player) players.get(p);
            JOptionPane.showMessageDialog(null, tempPlayer.getName() + "   |     " + tempPlayer.getBalance() + " \n");
        }
    }

    public void CreateBins()
    {
    	
    	for (int z = 0; z <= 36;z++)
    	{
    		
    		if(z == 0 )
    		{
    			Bin newBin = new Bin(z,"green");
				bins.add(newBin);
				System.out.println("Creating new bin with number "  + z );
    		}
    		if( z >= 1 && z <= 10)
    		{
    			if (z % 2 == 0)
    			{
    				Bin newBin = new Bin(z,"BLACK");
    				bins.add(newBin);
    				System.out.println("Creating new bin with number "  + z );
    			}
    			else {
    				Bin newBin = new Bin(z,"RED");
    				bins.add(newBin);
    				System.out.println("Creating new bin with number "  + z );
    			}
    		
    		}
    		
    		if( z >= 19 && z <= 28)
    		{
    			if (z % 2 == 0)
    			{
    				Bin newBin = new Bin(z,"BLACK");
    				bins.add(newBin);
    				System.out.println("Creating new bin with number "  + z );
    			}
    			else {
    				Bin newBin = new Bin(z,"RED");
    				bins.add(newBin);
    				System.out.println("Creating new bin with number "  + z );
    			}
    		
    		}
    		if( z >= 11 && z <= 18)
    		{
    			if (z % 2 == 0)
    			{
    				Bin newBin = new Bin(z,"RED");
    				bins.add(newBin);
    				System.out.println("Creating new bin with number "  + z );
    			}
    			else {
    				Bin newBin = new Bin(z,"BLACK");
    				bins.add(newBin);
    				System.out.println("Creating new bin with number "  + z );
    			}
    		
    		}
    		
    		if( z >= 29 && z <= 36)
    		{
    			if (z % 2 == 0)
    			{
    				Bin newBin = new Bin(z,"RED");
    				bins.add(newBin);
    				System.out.println("Creating new bin with number "  + z );
    			}
    			else {
    				Bin newBin = new Bin(z,"BLACK");
    				bins.add(newBin);
    				System.out.println("Creating new bin with number "  + z );
    			}
    		
    		}
    		
    		
    	}
    }
    
    public void GetArrayListPlayers(ArrayList <Player> playerBets)
    {
        playerBets = players;
    }
}

	



